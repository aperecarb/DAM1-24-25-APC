import java.io.; import java.util.; import com.google.gson.*;

class Personaje { private String nombre; private String raza; private int fuerza, agilidad, constitucion; private int nivel, experiencia, puntosDeVida;

// Constructor con todos los parámetros
public Personaje(String nombre, String raza, int fuerza, int agilidad, int constitucion, int nivel, int experiencia, int puntosDeVida) {
    this.nombre = nombre;
    this.raza = raza;
    this.fuerza = fuerza;
    this.agilidad = agilidad;
    this.constitucion = constitucion;
    this.nivel = nivel;
    this.experiencia = experiencia;
    this.puntosDeVida = puntosDeVida;
}

// Constructor con nombre, raza y características físicas (nivel = 1, exp = 0, vida = 50 + constitución)
public Personaje(String nombre, String raza, int fuerza, int agilidad, int constitucion) {
    this(nombre, raza, fuerza, agilidad, constitucion, 1, 0, 50 + constitucion);
}

// Constructor con nombre y raza (resto aleatorio)
public Personaje(String nombre, String raza) {
    this(nombre, raza, new Random().nextInt(100) + 1, new Random().nextInt(100) + 1, new Random().nextInt(100) + 1);
}

// Constructor solo con nombre (raza por defecto "HUMANO", atributos aleatorios)
public Personaje(String nombre) {
    this(nombre, "HUMANO");
}

}

class AppCreaPersonaje { private static final String FILE_PATH = "src/ud5/rol/personajes.json";

public static void guardarPersonajes(List<Personaje> personajes) {
    try {
        File file = new File(FILE_PATH);
        file.getParentFile().mkdirs(); // Asegurar que la carpeta exista
        FileWriter writer = new FileWriter(file);
        new Gson().toJson(personajes, writer);
        writer.close();
    } catch (IOException e) {
        e.printStackTrace();
    }
}

public static List<Personaje> cargarPersonajes() {
    try {
        File file = new File(FILE_PATH);
        if (!file.exists()) return new ArrayList<>();
        BufferedReader reader = new BufferedReader(new FileReader(file));
        List<Personaje> personajes = new Gson().fromJson(reader, new TypeToken<List<Personaje>>() {}.getType());
        reader.close();
        return personajes != null ? personajes : new ArrayList<>();
    } catch (IOException e) {
        e.printStackTrace();
        return new ArrayList<>();
    }
}

}

