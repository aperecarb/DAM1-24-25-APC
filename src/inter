// Clase abstracta base
abstract class MullerTraballadora {
    protected String nome;
    protected String apelidos;
    protected int anoNacemento;

    public MullerTraballadora(String nome, String apelidos, int anoNacemento) {
        this.nome = nome;
        this.apelidos = apelidos;
        this.anoNacemento = anoNacemento;
    }

    public int getIdade(int anoActual) {
        return anoActual - anoNacemento;
    }

    public abstract String descricionContribucion();
}

// Interfaces
interface IPioneira {
    String getDescubrimentoOuAporte();
}

interface IActivista {
    String getCausaDefendida();
}

// Clases concretas
class Cientifica extends MullerTraballadora implements IPioneira {
    private String descubrimento;

    public Cientifica(String nome, String apelidos, int anoNacemento, String descubrimento) {
        super(nome, apelidos, anoNacemento);
        this.descubrimento = descubrimento;
    }

    public String descricionContribucion() {
        return nome + " " + apelidos + " foi unha científica pioneira que descubriu: " + descubrimento;
    }

    public String getDescubrimentoOuAporte() {
        return descubrimento;
    }
}

class Artista extends MullerTraballadora {
    private String estilo;

    public Artista(String nome, String apelidos, int anoNacemento, String estilo) {
        super(nome, apelidos, anoNacemento);
        this.estilo = estilo;
    }

    public String descricionContribucion() {
        return nome + " " + apelidos + " destacou na arte co estilo: " + estilo;
    }
}

class Politica extends MullerTraballadora implements IActivista {
    private String causa;

    public Politica(String nome, String apelidos, int anoNacemento, String causa) {
        super(nome, apelidos, anoNacemento);
        this.causa = causa;
    }

    public String descricionContribucion() {
        return nome + " " + apelidos + " foi unha política e activista destacada por: " + causa;
    }

    public String getCausaDefendida() {
        return causa;
    }
}

// Ampliación con novas subclases
class Escritora extends MullerTraballadora implements IPioneira {
    private String obraMestra;

    public Escritora(String nome, String apelidos, int anoNacemento, String obraMestra) {
        super(nome, apelidos, anoNacemento);
        this.obraMestra = obraMestra;
    }

    public String descricionContribucion() {
        return nome + " " + apelidos + " foi unha escritora pioneira coa obra mestra: " + obraMestra;
    }

    public String getDescubrimentoOuAporte() {
        return obraMestra;
    }
}

class Deportista extends MullerTraballadora implements IPioneira {
    private String fitoHistorico;

    public Deportista(String nome, String apelidos, int anoNacemento, String fitoHistorico) {
        super(nome, apelidos, anoNacemento);
        this.fitoHistorico = fitoHistorico;
    }

    public String descricionContribucion() {
        return nome + " " + apelidos + " foi unha deportista pioneira con este fito histórico: " + fitoHistorico;
    }

    public String getDescubrimentoOuAporte() {
        return fitoHistorico;
    }
}

class Sindicalista extends MullerTraballadora implements IActivista {
    private String movementoDefendido;

    public Sindicalista(String nome, String apelidos, int anoNacemento, String movementoDefendido) {
        super(nome, apelidos, anoNacemento);
        this.movementoDefendido = movementoDefendido;
    }

    public String descricionContribucion() {
        return nome + " " + apelidos + " foi unha sindicalista que defendeu o movemento: " + movementoDefendido;
    }

    public String getCausaDefendida() {
        return movementoDefendido;
    }
}

// Programa principal
public class MulleresDestacadas {
    public static void main(String[] args) {
        MullerTraballadora[] mulleres = {
            new Cientifica("Marie", "Curie", 1867, "Descubriu o radio e o polonio"),
            new Artista("Frida", "Kahlo", 1907, "Surrealismo e pintura autobiográfica"),
            new Politica("Rosa", "Parks", 1913, "Loita polos dereitos civís e contra a segregación racial"),
            new Cientifica("Ada", "Lovelace", 1815, "Primeira programadora da historia"),
            new Escritora("Virginia", "Woolf", 1882, "A Room of One's Own"),
            new Deportista("Serena", "Williams", 1981, "Gañadora de múltiples Grand Slams"),
            new Sindicalista("Clara", "Campoamor", 1888, "Loita polo sufraxio feminino en España")
        };

        System.out.println("=== Mulleres Traballadoras Destacadas ===");
        for (MullerTraballadora muller : mulleres) {
            System.out.println(muller.descricionContribucion());
        }

        System.out.println("\n=== Detalles Específicos ===");
        for (MullerTraballadora muller : mulleres) {
            if (muller instanceof IPioneira) {
                System.out.println(muller.nome + " foi pioneira en: " + ((IPioneira) muller).getDescubrimentoOuAporte());
            }
            if (muller instanceof IActivista) {
                System.out.println(muller.nome + " defendeu a causa: " + ((IActivista) muller).getCausaDefendida());
            }
        }
    }
}