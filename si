// Paquete: web
package web;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

public class LogApache {

    private static final String LOG_FILE_NAME = "bacharelato_access.log";

    public static void main(String[] args) {
        int totalAccesos = 0;
        int accesosIncorrectos404 = 0;
        // Usamos LinkedHashMap para mantener el orden de inserción de IPs si no se repiten,
        // aunque luego se ordenarán por frecuencia.
        Map<String, Integer> ipCounts = new HashMap<>();

        // Patrón para extraer la dirección IP y el código de estado.
        // La IP suele estar al principio de la línea.
        // El código de estado suele estar después de la solicitud HTTP, antes del tamaño de respuesta.
        // Ejemplo de línea: 192.168.1.1 - - [27/May/2025:10:00:00 +0000] "GET /index.html HTTP/1.1" 200 1234 "-" "User-Agent"
        // Este patrón es más flexible para el formato de la imagen proporcionada.
        // Captura la IP (primer grupo) y el código de estado (segundo grupo).
        Pattern logPattern = Pattern.compile("^(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}).*?\"\\s(\\d{3})\\s");

        try (BufferedReader reader = new BufferedReader(new FileReader(LOG_FILE_NAME))) {
            String line;
            while ((line = reader.readLine()) != null) {
                totalAccesos++;

                Matcher matcher = logPattern.matcher(line);
                if (matcher.find()) {
                    String ipAddress = matcher.group(1);
                    String statusCode = matcher.group(2);

                    // Contar accesos incorrectos (código 404)
                    if ("404".equals(statusCode)) {
                        accesosIncorrectos404++;
                    }

                    // Contar ocurrencias de cada IP
                    ipCounts.put(ipAddress, ipCounts.getOrDefault(ipAddress, 0) + 1);
                } else {
                    // Si una línea no coincide con el patrón, podría ser un formato diferente
                    // o una línea que no es un registro de acceso.
                    System.err.println("Advertencia: Línea no reconocida o con formato inesperado: " + line);
                }
            }

            // 1. N° total de accesos al servidor
            System.out.println("--- Análisis del Log de Apache ---");
            System.out.println("1. N° total de accesos al servidor: " + totalAccesos);

            // 2. N° de accesos incorrectos (Con código 404)
            System.out.println("2. N° de accesos incorrectos (Con código 404): " + accesosIncorrectos404);

            // 3. Listado de las distintas direcciones IP registradas y el número de veces que aparece cada una
            System.out.println("\n3. Listado de direcciones IP y su número de repeticiones (ordenadas de mayor a menor):");

            // Ordenar el mapa de IPs por el número de repeticiones (valor) en orden descendente
            // y luego por la IP (clave) en orden ascendente para desempates.
            LinkedHashMap<String, Integer> sortedIpCounts = ipCounts.entrySet()
                    .stream()
                    .sorted(Map.Entry.<String, Integer>comparingByValue(Comparator.reverseOrder())
                            .thenComparing(Map.Entry.comparingByKey()))
                    .collect(Collectors.toMap(
                            Map.Entry::getKey,
                            Map.Entry::getValue,
                            (e1, e2) -> e1, // Merge function for duplicate keys (should not happen here)
                            LinkedHashMap::new // Ensure the order is preserved
                    ));

            sortedIpCounts.forEach((ip, count) ->
                    System.out.println("   " + ip + ": " + count + " veces"));

        } catch (FileNotFoundException e) {
            System.err.println("Error: El archivo '" + LOG_FILE_NAME + "' no se encontró en la ruta especificada.");
            System.err.println("Asegúrate de que el archivo esté en el mismo directorio que el programa.");
        } catch (IOException e) {
            System.err.println("Error al leer el archivo: " + e.getMessage());
        }
    }
}
